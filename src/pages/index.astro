---
import LayoutMain from '../layouts/Main.astro'
import Banner from '../components/Banner.astro'
import Card from '../components/Card.astro'
import WorkTypeToggle from '../components/WorkTypeToggle.astro'
import Scrobbler from '../components/Scrobbler.astro'

// Import multiple files with Astro.glob
const clientContent = await Astro.glob('../content/client/**/*.md')
const projectContent = await Astro.glob('../content/project/**/*.md')

const clients = clientContent.sort((a, b) => {
  if (a.frontmatter.date > b.frontmatter.date) {
    return -1
  } else if (a.frontmatter.date < b.frontmatter.date) {
    return 1
  }
  return 0
})

const projects = projectContent.sort((a, b) => {
  if (a.frontmatter.date > b.frontmatter.date) {
    return -1
  } else if (a.frontmatter.date < b.frontmatter.date) {
    return 1
  }
  return 0
})
---

<LayoutMain title='Luke Secomb | Web Developer, Photographic connoisseur and Music nerd'>
  <div class='grid grid-cols-12 flex-1 px-4 lg:px-0'>
    <div
      class='mb-8 md:mb-12 lg:mb-0 mt-8 md:mt-32 lg:mt-40 col-span-12 lg:col-span-5 lg:pl-4 pr-8 flex flex-col'
    >
      <Banner />
      <div class='mt-12'>
        <WorkTypeToggle />
      </div>
      <div class='flex-1 hidden lg:flex items-end mb-12 md:mb-4 xxxl:mb-8'>
        <Scrobbler />
      </div>
    </div>
    <div
      class='col-span-12 lg:col-span-7 h-full lg:overflow-auto md:pb-8 relative'
    >
      <ul
        id='type-container'
        data-type='client'
        class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-1 xl:grid-cols-2 gap-8 lg:gap-16 lg:pr-4 mb-0 md:mb-24 lg:mb-0 xl:mb-24'
      >
        {
          clients.map((item, key) => (
            <li
              class={`client w-full bi-avoid mb-8 ${
                key % 2
                  ? 'lg:mt-0 lg:mb-0 xl:mb-8 xxl:mb-16'
                  : 'md:-mb-24 lg:mb-0 xl:-mb-24 md:mt-24 lg:mt-0 xl:mt-24 xxl:mt-32'
              }`}
            >
              <Card
                title={item.frontmatter.title}
                description={item.frontmatter.description}
                devDescription={item.frontmatter.devDescription}
                url={item.frontmatter.url}
                image={item.frontmatter.imageMain}
                logo={item.frontmatter.imageLogo}
                TODO:fix
                this
                slug={item.file.split('/client/')[1].split('/index.md')[0]}
                type='client'
              />
            </li>
          ))
        }
        {
          projects.map((item, key) => (
            <li
              class={`project w-full bi-avoid mb-8 ${
                key % 2
                  ? 'lg:mt-0 lg:mb-0 xl:mb-8 xxl:mb-16'
                  : 'md:-mb-24 lg:mb-0 xl:-mb-24 md:mt-24 lg:mt-0 xl:mt-24 xxl:mt-32'
              }`}
            >
              <Card
                title={item.frontmatter.title}
                description={item.frontmatter.description}
                devDescription={item.frontmatter.devDescription}
                url={item.frontmatter.url}
                image={item.frontmatter.imageMain}
                logo={item.frontmatter.imageLogo}
                TODO:fix
                this
                slug={item.file.split('/project/')[1].split('/index.md')[0]}
                type='project'
              />
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</LayoutMain>

<script>
  const typeContainer = document.querySelector('#type-container')
  const workTypeToggle = document.querySelector('#work-type-toggle')

  workTypeToggle?.addEventListener('onsettype', (event: any) => {
    typeContainer?.setAttribute('data-type', (event.detail as any).type)
    // only scroll on desktop
    if (window.innerWidth > 1023) {
      typeContainer?.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
        inline: 'nearest',
      })
    }
  })
</script>
