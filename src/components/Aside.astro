---
/* borrowed from https://github.com/withastro/starlight/blob/main/packages/starlight/user-components/Aside.astro */
import { AstroError } from 'astro/errors'
// import Icon from './Icon.astro';

const asideVariants = [
  'note',
  'tip',
  'caution',
  'warning',
  'important',
] as const
// const icons = { note: 'information', tip: 'rocket', caution: 'warning', danger: 'error' } as const;
const titleMapping = {
  note: 'Note',
  tip: 'Tip',
  caution: 'Caution',
  warning: 'Warning',
  important: 'Important',
} as const

interface Props {
  type?: (typeof asideVariants)[number]
  title?: string
}

let { type = 'note', title } = Astro.props

if (!asideVariants.includes(type)) {
  throw new AstroError(
    'Invalid `type` prop passed to the `<Aside>` component.\n',
    `Received: ${JSON.stringify(type)}\n` +
      `Expected one of ${asideVariants.map((i) => JSON.stringify(i)).join(', ')}`
  )
}

if (!title) {
  title = `aside.${type}` // Astro.locals.t(`aside.${type}`);
}
---

<blockquote aria-label={title} class={`markdown-alert markdown-alert-${type}`}>
  <p class='markdown-alert-title'>
    <svg
      class='octicon octicon-info mr-2'
      viewBox='0 0 16 16'
      version='1.1'
      width='16'
      height='16'
      aria-hidden='true'
      ><path
        d='M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z'
      ></path>
    </svg>
    {titleMapping[type]}
  </p>
  <slot />
</blockquote>
