---
const SKELETONS = Array.from([...Array(9).keys()])
---

<div class='w-full'>
  <h3 class='mb-1 text-4xl'>Top albums</h3>
  <p class='mb-4'>
    Collection of what I've had in rotation over the past month. View more on <a
      href='https://www.last.fm/user/lu_ke____'
      class='underline'
      target='_blank'
      rel='nofollow noreferrer'>last.fm</a
    >.
  </p>

  <div class='grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 w-full'>
    {
      SKELETONS.map((item, key) => (
        <a
          href='#'
          target='_blank'
          rel='nofollow noreferrer'
          id={`album-${item}`}
          class={`album w-full aspect-square flex bg-no-repeat bg-cover overflow-hidden ${key > 5 ? 'hidden sm:flex' : ''} ${key === 8 ? 'md:hidden' : ''}`}
          style='background-color: var(--theme-background-secondary);'
        >
          <span class='container skeleton w-full h-full pointer-events-none' />
        </a>
      ))
    }
  </div>
</div>

<style>
  .album {
    position: relative;
  }
  .album::after {
    content: '';
    position: absolute;
    background: linear-gradient(
      180deg,
      transparent 0,
      rgba(0, 0, 0, 0.45) 70%,
      rgba(0, 0, 0, 0.74)
    );
    height: 100%;
    width: 100%;
  }

  .album:where(:hover, :focus-visible) {
    z-index: 10;
  }

  .container {
    display: flex;
    flex-direction: column;
    justify-content: end;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
    color: #fff;
    padding: calc(var(--spacing) * 2);
    font-size: 12px;
    position: relative;
    z-index: 50;
  }

  .skeleton {
    -webkit-animation-duration: 1s;
    -webkit-animation-fill-mode: forwards;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-name: skeletonShimmer;
    -webkit-animation-timing-function: linear;
    background: #2f2f2f;
    background-image: linear-gradient(
      to right,
      #2f2f2f 0%,
      #4f4f4f 20%,
      #2f2f2f 40%,
      #2f2f2f 100%
    );
    background-repeat: no-repeat;
    background-size: 800px 800px;
    position: relative;
    border-radius: 2px;
  }

  @keyframes skeletonShimmer {
    0% {
      background-position: -468px 0;
    }
    100% {
      background-position: 468px 0;
    }
  }
  @-webkit-keyframes skeletonShimmer {
    0% {
      background-position: -468px 0;
    }
    100% {
      background-position: 468px 0;
    }
  }
</style>

<script>
  import type { LastFmApiResponse } from '../lastfm'

  const API_KEY = import.meta.env.PUBLIC_LAST_FM_API_KEY
  const SCROLLBE_LAST_FM_USER = 'lu_ke____'
  const GET_TOP_ARTISTS_URL = `https://ws.audioscrobbler.com/2.0/?method=user.getTopAlbums&user=${SCROLLBE_LAST_FM_USER}&api_key=${API_KEY}&period=1month&limit=9&format=json`

  async function fetchCurrentSong() {
    const response = await fetch(GET_TOP_ARTISTS_URL)
    const data: LastFmApiResponse = await response.json()

    if (data) {
      // @ts-ignore
      const albums = data?.topalbums?.album || []

      if (albums.length > 0) {
        for (const [key, album] of albums.entries()) {
          const containerEl: HTMLAnchorElement | null = document.querySelector(`#album-${key}`)
          if (containerEl) {
            const mediumImage = album.image.find(
              (image: any) => image.size === 'extralarge'
            )
            if (mediumImage && mediumImage['#text']) {
              containerEl.style.backgroundImage = `url("${mediumImage['#text']}")`
              containerEl.href = album.url
            }

            const containerSkeletonEl = containerEl.querySelector('.skeleton')
            if (containerSkeletonEl) {
              containerSkeletonEl.classList.remove('skeleton')

              containerSkeletonEl.innerHTML = `<span class="album-name line-clamp-4">${album.name}</span><span class="artist-name line-clamp-2">${album.artist.name}</span><span>${album.playcount} plays</span>`
            }
          }
        }
      } else {
        // no data?
      }
    }
  }

  // fetch on load
  fetchCurrentSong()

  setInterval(() => {
    fetchCurrentSong()
    // interval to re-check the current track every 2mins
  }, 120000)
</script>
